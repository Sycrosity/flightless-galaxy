name: Continuous Integration

on:
  pull_request:
  push: # Run CI on the main branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - main

jobs:
  simple:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - flags: --target wasm32-unknown-unknown --profile wasm-release
            os: ubuntu-latest
            rustup: wasm32-unknown-unknown
          - rustup: nightly --profile minimal 
          - flags: --features dev
          - os: ubuntu-latest
            deps: |
              sudo apt-get update &&
              sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev
          - os: macos-latest
            deps: |
              brew install michaeleisel/zld/zld
          - os: windows-latest
            deps: |
              cargo install -f cargo-binutils
              rustup component add llvm-tools-preview


        # actions: ["clippy"]

    name: Continuous Integrtion on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v3
      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install ${{ matrix.rustup }}
          rustup component add clippy rustfmt
      - uses: Swatinem/rust-cache@v2
      #cache this for macos!
      - name: install platform specific dependencies
        run: ${{ matrix.deps }}
      - name: run cargo fmt
        run:  cargo fmt --all --check
      - name: run cargo check
        run:  cargo check ${{ matrix.flags }}
      - name: run cargo clippy
        run:  cargo clippy ${{ matrix.flags }}
      - name: run cargo test
        run:  cargo test ${{ matrix.flags }}
